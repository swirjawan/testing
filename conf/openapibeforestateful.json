{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "Server hosting Pru 2.0 API",
    "version" : "1.0.0",
    "title" : "Pru 2.0 API Rev. PMN",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "apiteam@prudential.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers" : [ {
    "url" : "https://api.prudential.com/v1"
  }, {
    "url" : "http://api.prudential.com/v1"
  } ],
  "tags" : [ {
    "name" : "Customer",
    "description" : "Customer API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Product",
    "description" : "Product API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Policy",
    "description" : "Policy API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Claim",
    "description" : "Claim API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Underwriting",
    "description" : "Underwriting API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Document",
    "description" : "Document API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Billing",
    "description" : "Billing API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Payment",
    "description" : "Payment API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Agent",
    "description" : "Agent API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Quote",
    "description" : "Quote API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Proposal",
    "description" : "Proposal API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Workflow",
    "description" : "Workflow API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Fund",
    "description" : "Fund API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Campaign",
    "description" : "Campaign API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Doctor",
    "description" : "Doctor API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "User",
    "description" : "User API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Data",
    "description" : "Data API",
    "externalDocs" : {
      "description" : "Data Lake API",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Message",
    "description" : "Messaging API",
    "externalDocs" : {
      "description" : "Data Lake API",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Hospital",
    "description" : "Hospital API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Geo location",
    "description" : "Geo location API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Resource",
    "description" : "Resource API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Partner",
    "description" : "Partner API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Chat",
    "description" : "Chat API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Notification",
    "description" : "Notification API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "Group",
    "description" : "Group API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "PMN User API",
    "description" : "PMN Hospital Portal User API",
    "externalDocs" : {
      "description" : "API Related to Hospital Portal",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "PMN Admission API",
    "description" : "PMN Hospital Portal Admission API",
    "externalDocs" : {
      "description" : "API Related to Hospital Portal",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "PMN Document API",
    "description" : "PMN Hospital Portal Document API",
    "externalDocs" : {
      "description" : "API Related to Hospital Portal",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "PMN Case API",
    "description" : "PMN Hospital Portal Case API"
  }, {
    "name" : "PMN General API",
    "description" : "PMN Hospital Portal General API"
  } ],
  "paths" : {
    "/customer" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Create new customer",
        "description" : "",
        "operationId" : "createCustomer",
        "requestBody" : {
          "description" : "JSON model of customer to create",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "userVerified" : {
                      "type" : "boolean"
                    },
                    "body" : {
                      "$ref" : "#/components/schemas/Customer"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    },
                    "id" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/customer/search" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Find customers by query criteria",
        "description" : "",
        "operationId" : "findCustomersByCriteria",
        "requestBody" : {
          "description" : "Query JSON to define the criteria",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Customer"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "search:customers" ]
        } ]
      }
    },
    "/customer/exist" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Check if customer exist",
        "description" : "",
        "operationId" : "existCustomer",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "object",
                      "properties" : {
                        "idType" : {
                          "type" : "string"
                        },
                        "id" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "object",
                        "properties" : {
                          "id" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer by Id",
        "description" : "Returns a single customer",
        "operationId" : "getCustomerById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of customer to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Customer"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Customer Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      },
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Update an existing customer",
        "description" : "",
        "operationId" : "updateCustomer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of customer to update"
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Customer"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customer" ],
        "summary" : "Delete a customer",
        "description" : "",
        "operationId" : "deleteCustomer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "customer Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "delete:customers" ]
        } ]
      }
    },
    "/customer/{id}/address" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all customer addresses",
        "description" : "",
        "operationId" : "getCustomerAddresses",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "$ref" : "#/components/schemas/Address"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/address/{key}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get selected customer address",
        "description" : "",
        "operationId" : "getCustomerAddress",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Address"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Update customer address",
        "description" : "",
        "operationId" : "updateCustomerAddress",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of customer to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Address"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customer" ],
        "summary" : "Delete selected address",
        "description" : "",
        "operationId" : "deleteCustomerAddress",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "customer Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "delete:customers" ]
        } ]
      }
    },
    "/customer/{id}/contact" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all customer contacts",
        "description" : "",
        "operationId" : "getCustomerContacts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "$ref" : "#/components/schemas/Contact"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/contact/{key}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get selected customer contact",
        "description" : "",
        "operationId" : "getCustomerContact",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Contact"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Update customer contact",
        "description" : "",
        "operationId" : "updateCustomerContact",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of customer to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Contact"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customer" ],
        "summary" : "Delete selected contact",
        "description" : "",
        "operationId" : "deleteCustomerContact",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "customer Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "delete:customers" ]
        } ]
      }
    },
    "/customer/{id}/preference" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all customer preferences",
        "description" : "",
        "operationId" : "getCustomerPreferences",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/CustomerPreference"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/preference/{key}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get selected customer preference",
        "description" : "",
        "operationId" : "getCustomerPreference",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/CustomerPreference"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Update customer preference",
        "description" : "",
        "operationId" : "updateCustomerPreference",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of customer to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/CustomerPreference"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customer" ],
        "summary" : "Delete customer preference",
        "description" : "",
        "operationId" : "deleteCustomerPreference",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "customer Id to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "delete:customers" ]
        } ]
      }
    },
    "/customer/{id}/bankaccount" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all customer bank accounts",
        "description" : "",
        "operationId" : "getCustomerBankAccounts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "$ref" : "#/components/schemas/BankAccount"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/bankaccount/{key}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get selected customer bank account",
        "description" : "",
        "operationId" : "getCustomerBankAccount",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/BankAccount"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Update customer bank account",
        "description" : "",
        "operationId" : "updateCustomerBankAccount",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of customer to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/BankAccount"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseHeader"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customer" ],
        "summary" : "Delete selected bank account",
        "description" : "",
        "operationId" : "deleteCustomerBankAccount",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "customer Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Key identifier of bank account",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "delete:customers" ]
        } ]
      }
    },
    "/customer/{id}/agent" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get agent of customer",
        "description" : "",
        "operationId" : "getCustomerAgent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Agent"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/policy" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all policies of customer",
        "description" : "",
        "operationId" : "getCustomerPolicies",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Policy"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/claim" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all claims of customer",
        "description" : "",
        "operationId" : "getCustomerClaims",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Claim"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/lifestyle" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer lifestyle details",
        "description" : "",
        "operationId" : "getCustomerLifestyle",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/CustomerLifestyle"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Update customer lifestyle details",
        "description" : "",
        "operationId" : "updateCustomerLifestyle",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of customer to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/CustomerLifestyle"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/CustomerLifestyle"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      }
    },
    "/customer/{id}/lifestyle/estimateBMI" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Post Profile Picture for BMI",
        "description" : "",
        "operationId" : "estimateBMI",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Document"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/CustomerLifestyle"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      }
    },
    "/customer/{id}/transaction" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get transaction history of customer",
        "description" : "",
        "operationId" : "getCustomerTransactions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "type of transaction (Credit/Debit)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "type of transaction",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/TransactionDetail"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/payment" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get payment history of customer",
        "description" : "",
        "operationId" : "getCustomerPayments",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Payment"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/billing" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get billing detail of customer",
        "description" : "",
        "operationId" : "getCustomerBillingDetail",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/BillingDetail"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/billing/invoice" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer invoice",
        "description" : "",
        "operationId" : "getCustomerInvoices",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/BillingInvoice"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/billing/stmt" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer account statement",
        "description" : "",
        "operationId" : "getCustomerAccountStmt",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/AccountStmt"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/workflow" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all workflows of customer",
        "description" : "",
        "operationId" : "getCustomerWorkflows",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Workflow"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/notify" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Send customer notification",
        "description" : "",
        "operationId" : "notifyCustomer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of customer to send notifications to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Notification object that needs to be sent",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Notification"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      }
    },
    "/customer/{id}/event" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get events of customer",
        "description" : "Return all events associated with customer. This includes past and future events",
        "operationId" : "getCustomerEvents",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Event"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Create event for this customer",
        "description" : "Create event for this customer",
        "operationId" : "createEvent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Event object that needs to be created",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Event"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers", "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/conversation" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Create conversation session with this customer",
        "description" : "Create conversation session for this customer",
        "operationId" : "createCustomerConversation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Conversation object that needs to be created",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Conversation"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "string"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      },
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Update conversation status",
        "description" : "Update conversation status",
        "operationId" : "upateConversationStatus",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Conversation object that needs to be updated",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Conversation"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      },
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all conversations with this customer",
        "description" : "Get all conversations with this customer",
        "operationId" : "getCustomerConversations",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Conversation"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/conversation/{convId}/message" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Create message for this conversation",
        "description" : "Create message for this conversation",
        "operationId" : "createConversationMessage",
        "parameters" : [ {
          "name" : "convId",
          "in" : "path",
          "description" : "conversation Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Conversation Message object that needs to be created",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/ConversationMessage"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "string"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      },
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get messages for this conversation",
        "description" : "Get messages for this conversation",
        "operationId" : "getConversationMessages",
        "parameters" : [ {
          "name" : "convId",
          "in" : "path",
          "description" : "conversation Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/ConversationMessage"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/conversation/{convId}/outcome" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Create outcome of this conversation",
        "description" : "Create outcome of this conversation",
        "operationId" : "createConversationOutcome",
        "parameters" : [ {
          "name" : "convId",
          "in" : "path",
          "description" : "conversation Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "ConversationOutcome object that needs to be created",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/ConversationOutcome"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "string"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      },
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get outcome of this conversation",
        "description" : "Get outcome of this conversation",
        "operationId" : "getConversationOutcome",
        "parameters" : [ {
          "name" : "convId",
          "in" : "path",
          "description" : "conversation Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/ConversationOutcome"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Id supplied"
          },
          "404" : {
            "description" : "Customer not found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      },
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Update outcome of this conversation",
        "description" : "Update outcome of this conversation",
        "operationId" : "updateConversationOutcome",
        "parameters" : [ {
          "name" : "convId",
          "in" : "path",
          "description" : "conversation Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "ConversationOutcome object that needs to be updated created",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/ConversationOutcome"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "string"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      }
    },
    "/customer/{id}/complaint" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer complaints",
        "description" : "",
        "operationId" : "getCustomerComplaints",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/CustomerComplaint"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Create customer complaint",
        "description" : "",
        "operationId" : "createCustomerComplaint",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Complaint object to be created",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/CustomerComplaint"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      }
    },
    "/customer/{id}/document" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer documents",
        "description" : "",
        "operationId" : "getCustomerDocuments",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Document"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Add customer documents",
        "description" : "",
        "operationId" : "addCustomerDocuments",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Document object that needs to be created",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Document"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      }
    },
    "/customer/{id}/comms" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer communications",
        "description" : "",
        "operationId" : "getCustomerComms",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Notification"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/health/medicine" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Order medicine for this customer",
        "description" : "Order medicine for this customer",
        "operationId" : "orderMedicine",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Medicine request",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/MedicineRequest"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/MedicineResponse"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      }
    },
    "/customer/{id}/health/ambulance" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Call ambulance for this customer",
        "description" : "Call ambulance for this customer",
        "operationId" : "callAmbulance",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Ambulance request",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/AmbulanceRequest"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/AmbulanceResponse"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Id supplied"
          },
          "404" : {
            "description" : "Customer not found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      }
    },
    "/customer/{id}/health/consultation" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all consultations",
        "description" : "Get all consultations",
        "operationId" : "getAllConsultations",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Consulation"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/health/prescription" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all prescriptions",
        "description" : "Get all prescriptions",
        "operationId" : "getAllPrescriptions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Prescription"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/health/test" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all lab tests",
        "description" : "Get all lab tests",
        "operationId" : "getAllLabTests",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/TestReport"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/health/test/{key}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get lab tests by Id",
        "description" : "Get lab tests by Id",
        "operationId" : "getLabTestsById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Lab test id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/TestReport"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/health/casenote" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all case notes",
        "description" : "Get all case notes",
        "operationId" : "getAllCaseNotes",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "from date",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "yyyy-MM-dd"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "to date",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "yyyy-MM-dd"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Note"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/relations" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all customer relations",
        "description" : "Get all customer relations",
        "operationId" : "getAllRelations",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Customer"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/relations/{key}" : {
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Update customer Relation",
        "description" : "Update customer relation",
        "operationId" : "updateCustomerRelation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of customer to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Relation id to be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Customer"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customer" ],
        "summary" : "Delete selected relation",
        "description" : "",
        "operationId" : "deleteCustomerRelation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "customer Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Key identifier of relation",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "delete:customers", "write:customers" ]
        } ]
      }
    },
    "/customer/{id}/externalIds" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all customer external Ids",
        "description" : "",
        "operationId" : "getCustomerExternalIds",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "$ref" : "#/components/schemas/Customer"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/externalIds/{key}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get selected externalId",
        "description" : "",
        "operationId" : "getCustomerExternalId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Customer"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Update customer External Id",
        "description" : "",
        "operationId" : "updateCustomerExternalId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of customer to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Customer"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customer" ],
        "summary" : "Delete selected External Id",
        "description" : "",
        "operationId" : "deleteCustomerExternalId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "customer Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers", "delete:customers" ]
        } ]
      }
    },
    "/customer/{id}/connect" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Create connect with customer",
        "description" : "Create connect with customer",
        "operationId" : "createCustomerConnect",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Connect object that needs to be created",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Connection"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "string"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      },
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all Connect with this customer",
        "description" : "Get all Connect with this customer",
        "operationId" : "getAllCustomerConnect",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Connection"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/connect/{key}" : {
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Update Customer Connect ",
        "description" : "Update Customer Connect ",
        "operationId" : "updateCustomerConnect",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Connect object that needs to be updated",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Connection"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customer" ],
        "summary" : "Delete selected customer connect",
        "description" : "",
        "operationId" : "deleteCustomerConnect",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "customer connect Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers", "delete:customers" ]
        } ]
      }
    },
    "/customer/{id}/group" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all groups for this customer",
        "description" : "Get all groups for this customer",
        "operationId" : "getAllCustomerGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "status of the group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Group"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/group/join" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Join the group",
        "description" : "Join the group",
        "operationId" : "joinGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Group"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      }
    },
    "/customer/{id}/group/leave" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Leave the group",
        "description" : "Leave the group",
        "operationId" : "leaveGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Group"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      }
    },
    "/customer/{id}/group/addMember" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Add member to the group",
        "description" : "Add member to the group",
        "operationId" : "addGroupMember",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Connection"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      }
    },
    "/customer/{id}/wallet" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get wallet detail of customer",
        "description" : "",
        "operationId" : "getCustomerWalletDetail",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Wallet"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      },
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Update customer wallet",
        "description" : "",
        "operationId" : "updateCustomerWallet",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of customer to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Wallet"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      }
    },
    "/customer/{id}/termsCondition" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get all customer termsCondition",
        "description" : "",
        "operationId" : "getAllCustomerTermsCondition",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "$ref" : "#/components/schemas/TermsCondition"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/customer/{id}/termsCondition/{key}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get selected customer termsCondition",
        "description" : "",
        "operationId" : "getCustomerTermsCondition",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/TermsCondition"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      },
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Update customer termsCondition",
        "description" : "",
        "operationId" : "updateCustomerTermsCondition",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of customer to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/TermsCondition"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customer" ],
        "summary" : "Delete selected termsCondition",
        "description" : "",
        "operationId" : "deleteCustomerTermsCondition",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "customer Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "delete:customers" ]
        } ]
      }
    },
    "/customer/{id}/calendar" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Get Customer Calendar",
        "description" : "Get Customer Calendar",
        "operationId" : "getCustomerCalendar",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of customer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string"
                        },
                        "startDateTime" : {
                          "type" : "string"
                        },
                        "endDateTime" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Appointment"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:customers" ]
        } ]
      }
    },
    "/product" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "Create new product",
        "description" : "",
        "operationId" : "createProduct",
        "requestBody" : {
          "description" : "Product that needs to be created",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Product"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "string"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      }
    },
    "/product/search" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "Find products by query criteria",
        "description" : "",
        "operationId" : "findProductsByCriteria",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Product"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      }
    },
    "/product/{id}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Find product by Id",
        "description" : "Returns a single product",
        "operationId" : "getProductById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of product to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Product"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      },
      "put" : {
        "tags" : [ "Product" ],
        "summary" : "Update an existing product",
        "description" : "",
        "operationId" : "updateProduct",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of product to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Product object that needs to be updated",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Product"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Product" ],
        "summary" : "Delete product",
        "description" : "",
        "operationId" : "deleteProduct",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "product Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      }
    },
    "/product/{id}/component" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "add product component to this product",
        "description" : "",
        "operationId" : "addProductComponent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/ProductComponent"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      },
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Get all product components",
        "description" : "Get all product components",
        "operationId" : "getProductComponents",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/RequestHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Product"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      }
    },
    "/product/{id}/component/{compId}" : {
      "delete" : {
        "tags" : [ "Product" ],
        "summary" : "Remove product component from product",
        "description" : "",
        "operationId" : "deleteProductComponent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "product Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "compId",
          "in" : "path",
          "description" : "product component Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      }
    },
    "/product/component" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "Create new Product Component",
        "description" : "",
        "operationId" : "createProductComponent",
        "requestBody" : {
          "description" : "Product Component that needs to be created",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/ProductComponent"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "string"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      }
    },
    "/product/component/search" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "Find product components by query criteria",
        "description" : "",
        "operationId" : "findProductComponentsByCriteria",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/ProductComponent"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      }
    },
    "/product/component/{id}" : {
      "get" : {
        "tags" : [ "Product" ],
        "summary" : "Find product component by Id",
        "description" : "Returns a single product component",
        "operationId" : "getProductComponentById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of product component to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/ProductComponent"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      },
      "put" : {
        "tags" : [ "Product" ],
        "summary" : "Update an existing product component",
        "description" : "",
        "operationId" : "updateProductComponent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of product component to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Product component that needs to be updated",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/ProductComponent"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Product" ],
        "summary" : "Delete product component",
        "description" : "",
        "operationId" : "deleteProductComponentId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "product component Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      }
    },
    "/product/{id}/compute" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "compute rules of this product",
        "description" : "",
        "operationId" : "compute",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "string"
                      }
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    },
                    "body" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      }
    },
    "/product/{id}/compute/{sessId}" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "Stateful compute rules of this product",
        "description" : "",
        "operationId" : "productByIdCompute",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sessId",
          "in" : "path",
          "description" : "session Id of compute session",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "string"
                      }
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "type" : "string"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      }
    },
    "/product/{id}/generate/{templateId}" : {
      "post" : {
        "tags" : [ "Product" ],
        "summary" : "Generate documents from product document template",
        "description" : "",
        "operationId" : "productByIdGenerate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "templateId",
          "in" : "path",
          "description" : "Id of doc template",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "string"
                      }
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Document"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:products", "read:products" ]
        } ]
      }
    },
    "/quote" : {
      "post" : {
        "tags" : [ "Quote" ],
        "summary" : "Create quote",
        "description" : "",
        "operationId" : "createQuote",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/QuoteRequest"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Quote"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers", "read:customers" ]
        } ]
      }
    },
    "/proposal" : {
      "post" : {
        "tags" : [ "Proposal" ],
        "summary" : "Submit proposal",
        "description" : "",
        "operationId" : "submitProposal",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Proposal"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:proposal", "read:proposal" ]
        } ]
      }
    },
    "/proposal/search" : {
      "post" : {
        "tags" : [ "Proposal" ],
        "summary" : "Find proposal by query criteria",
        "description" : "",
        "operationId" : "findProposalsByCriteria",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Proposal"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:proposals", "read:proposals" ]
        } ]
      }
    },
    "/proposal/{id}" : {
      "get" : {
        "tags" : [ "Proposal" ],
        "summary" : "Find proposal by Id",
        "description" : "Return proposal by Id",
        "operationId" : "getProposalById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of proposal to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/RequestHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Proposal"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:proposals", "read:proposals" ]
        } ]
      },
      "put" : {
        "tags" : [ "Proposal" ],
        "summary" : "Update proposal",
        "description" : "",
        "operationId" : "updateProposal",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "proposal Id to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Proposal"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:proposal", "read:proposal" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Proposal" ],
        "summary" : "Delete proposal",
        "description" : "",
        "operationId" : "deleteProposal",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "proposal Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:proposal", "read:proposal" ]
        } ]
      }
    },
    "/agent" : {
      "post" : {
        "tags" : [ "Agent" ],
        "summary" : "Create Agent",
        "description" : "",
        "operationId" : "createAgent",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Agent"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "string"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:agents", "read:agents" ]
        } ]
      }
    },
    "/agent/search" : {
      "post" : {
        "tags" : [ "Agent" ],
        "summary" : "Find agents by query criteria",
        "description" : "",
        "operationId" : "findAgentsByCriteria",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Agent"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:agents", "read:agents" ]
        } ]
      }
    },
    "/agent/{id}" : {
      "get" : {
        "tags" : [ "Agent" ],
        "summary" : "Find agent by Id",
        "description" : "Return agent by Id",
        "operationId" : "getAgentById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of agent to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Agent"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Agent" ],
        "summary" : "Update agent",
        "description" : "",
        "operationId" : "updateAgnt",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "agent Id to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Agent"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:agents", "read:agents" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Agent" ],
        "summary" : "Delete agent",
        "description" : "",
        "operationId" : "deleteAgent",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "agent Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:agents", "read:agents" ]
        } ]
      }
    },
    "/payment/initiate" : {
      "get" : {
        "tags" : [ "Payment" ],
        "summary" : "Initiate payment through payment gateway",
        "description" : "",
        "operationId" : "initiatePayment",
        "parameters" : [ {
          "in" : "query",
          "name" : "ordRef",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "amt",
          "schema" : {
            "type" : "number",
            "format" : "currency"
          }
        }, {
          "in" : "query",
          "name" : "cur",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "cat",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "desc",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:payments" ]
        } ]
      }
    },
    "/payment/checkout" : {
      "post" : {
        "tags" : [ "Payment" ],
        "summary" : "Perform payment transaction",
        "description" : "",
        "operationId" : "paymentCheckout",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/PaymentRequest"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/PaymentResponse"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:payments" ]
        } ]
      }
    },
    "/payment" : {
      "post" : {
        "tags" : [ "Payment" ],
        "summary" : "Update payment",
        "description" : "",
        "operationId" : "updatePayment",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ResponseHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Payment"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:payments" ]
        } ]
      }
    },
    "/underwriting/check" : {
      "post" : {
        "tags" : [ "Underwriting" ],
        "summary" : "Check underwriter",
        "description" : "",
        "operationId" : "underwriterCheck",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Proposal"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/UnderWriterResponse"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:underwritings" ]
        } ]
      }
    },
    "/underwriting/compute" : {
      "post" : {
        "tags" : [ "Underwriting" ],
        "summary" : "Submit computation request to underwriter",
        "description" : "",
        "operationId" : "underwriterCompute",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Proposal"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers", "read:customers" ]
        } ]
      }
    },
    "/claim" : {
      "post" : {
        "tags" : [ "Claim" ],
        "summary" : "Create claim",
        "description" : "",
        "operationId" : "createClaim",
        "requestBody" : {
          "description" : "JSON model of claim to create",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Claim"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "string"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:claims" ]
        } ]
      }
    },
    "/claim/search" : {
      "post" : {
        "tags" : [ "Claim" ],
        "summary" : "Find claims by query criteria",
        "description" : "",
        "operationId" : "findClaimsByCriteria",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Claim"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "search:claims" ]
        } ]
      }
    },
    "/claim/{id}" : {
      "get" : {
        "tags" : [ "Claim" ],
        "summary" : "Find claim by Id",
        "description" : "Returns a single Claim",
        "operationId" : "getClaimById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of claim to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Claim"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:claims" ]
        } ]
      },
      "put" : {
        "tags" : [ "Claim" ],
        "summary" : "Update an existing claim",
        "description" : "",
        "operationId" : "updateClaim",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of claim to update"
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Claim"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:claims" ]
        } ]
      }
    },
    "/claim/{id}/hospital/{hospitalId}" : {
      "get" : {
        "tags" : [ "Claim" ],
        "summary" : "Get claim Hospital",
        "description" : "Returns a Claim Hospital",
        "operationId" : "getClaimHospital",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of claim",
          "required" : true
        }, {
          "name" : "hospitalId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of Hospital",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Hospital"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:claims" ]
        } ]
      }
    },
    "/claim/{id}/doctor/{doctorId}" : {
      "get" : {
        "tags" : [ "Claim" ],
        "summary" : "Get claim Doctor",
        "description" : "Returns a Claim Doctor",
        "operationId" : "getClaimDoctor",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of claim",
          "required" : true
        }, {
          "name" : "doctorId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of doctor",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Doctor"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:claims" ]
        } ]
      }
    },
    "/claim/{id}/document" : {
      "get" : {
        "tags" : [ "Claim" ],
        "summary" : "Get claim Documents",
        "description" : "Returns a Claim Documents",
        "operationId" : "getDocumentsByClaimId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of claim",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Document"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:claims" ]
        } ]
      }
    },
    "/claim/{id}/document/{documentId}" : {
      "get" : {
        "tags" : [ "Claim" ],
        "summary" : "Get claim Document by documentId",
        "description" : "Returns a Claim Documents",
        "operationId" : "getClaimDocuments",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of claim",
          "required" : true
        }, {
          "name" : "documentId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of document",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Document"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:claims" ]
        } ]
      }
    },
    "/claim/{id}/policy/{policyId}" : {
      "get" : {
        "tags" : [ "Claim" ],
        "summary" : "Get claim policy",
        "description" : "Returns a Claim policy",
        "operationId" : "getClaimPolicy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of claim",
          "required" : true
        }, {
          "name" : "policyId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of Policy",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Policy"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:claims" ]
        } ]
      }
    },
    "/claim/{id}/client/{clientId}" : {
      "get" : {
        "tags" : [ "Claim" ],
        "summary" : "Get claim client",
        "description" : "Returns a Claim client",
        "operationId" : "getClaimClient",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of claim",
          "required" : true
        }, {
          "name" : "clientId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of client",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Party"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:claims" ]
        } ]
      }
    },
    "/claim/{id}/payment" : {
      "get" : {
        "tags" : [ "Claim" ],
        "summary" : "Get claim payment",
        "description" : "Returns a Claim payment",
        "operationId" : "getClaimPayment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of claim",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Payment"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:claims" ]
        } ]
      }
    },
    "/policy/search" : {
      "post" : {
        "tags" : [ "Policy" ],
        "summary" : "Find policies by query criteria",
        "description" : "",
        "operationId" : "findPoliciesByCriteria",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/RequestHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Policy"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "search:policies" ]
        } ]
      }
    },
    "/policy/{id}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Find policy by Id",
        "description" : "Returns a single policy",
        "operationId" : "getPolicyById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of policy to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Policy"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:policies" ]
        } ]
      },
      "put" : {
        "tags" : [ "Policy" ],
        "summary" : "Update an existing policy",
        "description" : "",
        "operationId" : "updatePolicy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of policy to update"
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Policy"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:policies" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "summary" : "Terminate Policy",
        "description" : "",
        "operationId" : "terminatePolicy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the policy to terminate",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:policies" ]
        } ]
      }
    },
    "/policy/{id}/product/{productId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Get policy product",
        "description" : "Return policy product",
        "operationId" : "getPolicyProduct",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the policy",
          "required" : true
        }, {
          "name" : "productId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the product",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Product"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:policies" ]
        } ]
      }
    },
    "/policy/{id}/productOption" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Get all policy product option",
        "description" : "Return all policy product option",
        "operationId" : "getAllPolicyProductOption",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the policy",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/ProductOption"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:policies" ]
        } ]
      }
    },
    "/policy/{id}/proposal/{proposalId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Get policy proposal",
        "description" : "return policy proposal",
        "operationId" : "getPolicyProposal",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the policy",
          "required" : true
        }, {
          "name" : "proposalId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the proposal",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Proposal"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:policies" ]
        } ]
      }
    },
    "/policy/{id}/paymentOption" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Get policy payment option",
        "description" : "return policy payment option",
        "operationId" : "getPolicyPaymentOption",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the policy",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/PaymentOption"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:policies" ]
        } ]
      }
    },
    "/policy/{id}/lifeAssured" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Get All policy Life assured customers",
        "description" : "return All policy Life assured customers",
        "operationId" : "getAllPolicyLifeAssured",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the policy",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Customer"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:policies" ]
        } ]
      }
    },
    "/policy/{id}/lifeAssured/{customerId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Get policy Life assured customer",
        "description" : "return policy Life assured customer",
        "operationId" : "getPolicyLifeAssured",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the policy",
          "required" : true
        }, {
          "name" : "customerId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the customer",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Customer"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:policies" ]
        } ]
      }
    },
    "/policy/{id}/beneficiary" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Get All policy beneficiaries",
        "description" : "return All policy beneficiaries",
        "operationId" : "getAllPolicyBeneficiary",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the policy",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Beneficiary"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:policies" ]
        } ]
      }
    },
    "/policy/{id}/beneficiary/{beneficiaryId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Get policy beneficiary by beneficiaryId",
        "description" : "return policy beneficiary",
        "operationId" : "getPolicyBeneficiary",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the policy",
          "required" : true
        }, {
          "name" : "beneficiaryId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "beneficiary Id",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Customer"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:policies" ]
        } ]
      }
    },
    "/policy/{id}/payer" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Get All policy payers",
        "description" : "return All policy payers",
        "operationId" : "getAllPolicyPayers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the policy",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Customer"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:policies" ]
        } ]
      }
    },
    "/policy/{id}/payer/{payerId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Get policy payer",
        "description" : "return policy payer",
        "operationId" : "getPolicyPayer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the policy",
          "required" : true
        }, {
          "name" : "payerId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "customer Id",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Customer"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:policies" ]
        } ]
      }
    },
    "/policy/{id}/owner/{ownerId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Get  policy owner",
        "description" : "return  policy owner",
        "operationId" : "getPolicyOwner",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the policy",
          "required" : true
        }, {
          "name" : "ownerId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the owner",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Customer"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:policies" ]
        } ]
      }
    },
    "/policy/{id}/client" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Get All policy Clients",
        "description" : "return All policy Clients",
        "operationId" : "getAllPolicyClients",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the policy",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Party"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:policies" ]
        } ]
      }
    },
    "/policy/{id}/client/{clientId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Get policy Client",
        "description" : "return policy Client",
        "operationId" : "getPolicyClients",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the policy",
          "required" : true
        }, {
          "name" : "clientId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of the Party",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Party"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:policies" ]
        } ]
      }
    },
    "/document" : {
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Create new Document",
        "description" : "",
        "operationId" : "createDocument",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Document"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/RequestHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "string"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:documents" ]
        } ]
      }
    },
    "/document/search" : {
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Find documents by query criteria",
        "description" : "",
        "operationId" : "findDocumentsByCriteria",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Document"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:documents", "read:documents" ]
        } ]
      }
    },
    "/document/{id}" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Find document by Id",
        "description" : "Return doumet by Id",
        "operationId" : "getDocumentById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of document to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Document"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:documents" ]
        } ]
      },
      "put" : {
        "tags" : [ "Document" ],
        "summary" : "Update document",
        "description" : "",
        "operationId" : "updateDocument",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "document Id to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Document"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:documents" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Document" ],
        "summary" : "Delete document",
        "description" : "",
        "operationId" : "deleteDocument",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "document Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "delete:documents" ]
        } ]
      }
    },
    "/document/trends" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Get Trends",
        "description" : "",
        "operationId" : "getTrends",
        "parameters" : [ {
          "name" : "category",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "description" : "category of trend",
          "required" : true
        }, {
          "name" : "subcategory",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "description" : "subcategory of trend",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Document"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:documents" ]
        } ]
      }
    },
    "/document/newsfeed" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Get News feed",
        "description" : "",
        "operationId" : "getNewsFeed",
        "parameters" : [ {
          "name" : "category",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "description" : "category of news",
          "required" : true
        }, {
          "name" : "subcategory",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "description" : "subcategory of news",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Document"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:documents" ]
        } ]
      }
    },
    "/document/newsfeed/{id}" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Get detailed news by Id",
        "description" : "Return detailed news by Id",
        "operationId" : "getNewsFeedById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of news to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Document"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:documents" ]
        } ]
      }
    },
    "/doctor/search" : {
      "post" : {
        "tags" : [ "Doctor" ],
        "summary" : "Find doctor by query criteria",
        "description" : "",
        "operationId" : "findDoctorsByCriteria",
        "requestBody" : {
          "description" : "Query JSON to define the criteria",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/RequestHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Doctor"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "search:doctors" ]
        } ]
      }
    },
    "/doctor/appointment" : {
      "post" : {
        "tags" : [ "Doctor" ],
        "summary" : "Get Doctor Appointment",
        "description" : "",
        "operationId" : "getDoctorAppointment",
        "requestBody" : {
          "description" : "Doctor Appointment",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/DoctorAppointment"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/DoctorAppointmentResponse"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:doctors" ]
        } ]
      }
    },
    "/doctor/appointment/confirmation" : {
      "post" : {
        "tags" : [ "Doctor" ],
        "summary" : "Confirm Doctor Appointment",
        "description" : "",
        "operationId" : "confirmDoctorAppointment",
        "requestBody" : {
          "description" : "Doctor Appointment",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/DoctorAppointment"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:doctors" ]
        } ]
      }
    },
    "/doctor/appointment/response" : {
      "post" : {
        "tags" : [ "Doctor" ],
        "summary" : "Doctor Appointment Confirmation",
        "description" : "",
        "operationId" : "updateDoctorAppointment",
        "requestBody" : {
          "description" : "Doctor Appointment Confirmation",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/DoctorAppointmentResponse"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/workflow/{id}" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "summary" : "Find workflow status by Id",
        "description" : "Return workflow by Id",
        "operationId" : "getWorkflowById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of workflow to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Workflow"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/user" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Create User",
        "description" : "Create User",
        "operationId" : "createUser",
        "requestBody" : {
          "description" : "JSON model of user to create",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/User"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    },
                    "id" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/user/login" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Login User",
        "description" : "Login User",
        "operationId" : "login",
        "requestBody" : {
          "description" : "JSON model of user login",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/User"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    },
                    "id" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/user/{id}" : {
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Update User",
        "description" : "Update User",
        "operationId" : "updateUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of user to update",
          "required" : true
        } ],
        "requestBody" : {
          "description" : "JSON model of user to update",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/User"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:users" ]
        } ]
      },
      "delete" : {
        "tags" : [ "User" ],
        "summary" : "Delete User",
        "description" : "Delete User",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of user to delete",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "delete:users" ]
        } ]
      }
    },
    "/user/changePassword" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Change Password",
        "description" : "Change Password",
        "operationId" : "changePassword",
        "requestBody" : {
          "description" : "Change password",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "object",
                      "properties" : {
                        "oldPassword" : {
                          "type" : "string"
                        },
                        "newPassword" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    },
                    "id" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:users" ]
        } ]
      }
    },
    "/user/resetPassword" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Reset Password",
        "description" : "Reset Password",
        "operationId" : "resetPassword",
        "requestBody" : {
          "description" : "Reset password",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "object",
                      "properties" : {
                        "loginId" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    },
                    "id" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/user/otp" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Submit Otp",
        "description" : "Submit Otp",
        "operationId" : "submitOtp",
        "requestBody" : {
          "description" : "Submit Otp",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "object",
                      "properties" : {
                        "otp" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    },
                    "id" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/user/logout" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Logout User",
        "description" : "Logout User",
        "operationId" : "logout",
        "requestBody" : {
          "description" : "JSON model of user logout",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/User"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    },
                    "id" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:users" ]
        } ]
      }
    },
    "/user/refreshToken" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Refresh Access Token",
        "description" : "",
        "operationId" : "refreshToken",
        "requestBody" : {
          "description" : "JSON model of refresh Token",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    },
                    "id" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/entity" : {
      "post" : {
        "tags" : [ "Data" ],
        "summary" : "Create Entity in data lake",
        "description" : "Create Entity in data lake",
        "operationId" : "createEntity",
        "requestBody" : {
          "description" : "JSON model of entity to create",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Entity"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    },
                    "id" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:entity", "read:entity" ]
        } ]
      }
    },
    "/entity/{id}" : {
      "put" : {
        "tags" : [ "Data" ],
        "summary" : "Update Entity in data lake",
        "description" : "Update Entity in data lake",
        "operationId" : "updateEntity",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of entity to update",
          "required" : true
        } ],
        "requestBody" : {
          "description" : "JSON model of entity to update",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Entity"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:entity", "read:entity" ]
        } ]
      },
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "Get Entity from data lake",
        "description" : "Get Entity from data lake",
        "operationId" : "readEntity",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of entity to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Entity"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:entity", "read:entity" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Data" ],
        "summary" : "Delete Entity in data lake",
        "description" : "Delete Entity in data lake",
        "operationId" : "deleteEntity",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of entity to update",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:entity", "read:entity" ]
        } ]
      }
    },
    "/entity/search" : {
      "post" : {
        "tags" : [ "Data" ],
        "summary" : "Search Entities in data lake",
        "description" : "Search Entities in data lake",
        "operationId" : "queryEntity",
        "requestBody" : {
          "description" : "JSON model of query",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/RequestHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Entity"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:entity", "read:entity" ]
        } ]
      }
    },
    "/entity/{id}/exist" : {
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "Check if entity exist in data lake",
        "description" : "Check if entity exist in data lake",
        "operationId" : "existEntity",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of entity to check",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:entity", "read:entity" ]
        } ]
      }
    },
    "/message" : {
      "post" : {
        "tags" : [ "Message" ],
        "summary" : "Send email,sms message to destination",
        "description" : "Send email,sms message to destination",
        "operationId" : "sendMessage",
        "requestBody" : {
          "description" : "JSON model of message to post",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Message"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    },
                    "id" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:message" ]
        } ]
      }
    },
    "/fund/amc" : {
      "get" : {
        "tags" : [ "Fund" ],
        "summary" : "Find all Asset Management companies (Fund Houses)",
        "description" : "Return all Asset management companies (Fund Houses)",
        "operationId" : "getAllAmc",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/RequestHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/FundHouse"
                      }
                    }
                  } ]
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/fund/search" : {
      "post" : {
        "tags" : [ "Fund" ],
        "summary" : "Find fund by query criteria",
        "description" : "",
        "operationId" : "findFundsByCriteria",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/RequestHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/FundHouse"
                      }
                    }
                  } ]
                }
              }
            }
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:fund", "read:fund" ]
        } ]
      }
    },
    "/fund/{fundCode}/detail" : {
      "get" : {
        "tags" : [ "Fund" ],
        "summary" : "Get details of the fund",
        "description" : "Get details of the fund",
        "operationId" : "getFundDetail",
        "parameters" : [ {
          "name" : "fundCode",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of fund to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Fund"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/fund/{fundCode}/performance" : {
      "get" : {
        "tags" : [ "Fund" ],
        "summary" : "Get Fund Performance",
        "description" : "Get Fund Performance",
        "operationId" : "getFundPerformance",
        "parameters" : [ {
          "name" : "fundCode",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of fund to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/FundPerformance"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/campaign" : {
      "post" : {
        "tags" : [ "Campaign" ],
        "summary" : "Create new campaign",
        "description" : "",
        "operationId" : "createCampaign",
        "requestBody" : {
          "description" : "JSON model of campaign to create",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Campaign"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    },
                    "id" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:campaign", "read:campaign" ]
        } ]
      }
    },
    "/campaign/{id}/pause" : {
      "post" : {
        "tags" : [ "Campaign" ],
        "summary" : "Pause campaign",
        "description" : "",
        "operationId" : "pauseCampaign",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of campaign",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:campaign", "read:campaign" ]
        } ]
      }
    },
    "/campaign/{id}/start" : {
      "post" : {
        "tags" : [ "Campaign" ],
        "summary" : "Start campaign",
        "description" : "",
        "operationId" : "startCampaign",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of campaign",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:campaign", "read:campaign" ]
        } ]
      }
    },
    "/campaign/search" : {
      "post" : {
        "tags" : [ "Campaign" ],
        "summary" : "Find campaigns by query criteria",
        "description" : "",
        "operationId" : "findCampaignsByCriteria",
        "requestBody" : {
          "description" : "Query JSON to define the criteria",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Campaign"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:campaign", "read:campaign" ]
        } ]
      }
    },
    "/campaign/{id}" : {
      "get" : {
        "tags" : [ "Campaign" ],
        "summary" : "Find campaign by Id",
        "description" : "Returns a single campaign",
        "operationId" : "getCampaignById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of campaign to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Campaign"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Campaign" ],
        "summary" : "Update an existing campaign",
        "description" : "",
        "operationId" : "updateCampaign",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of campaign to update"
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Campaign"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:campaign", "read:campaign" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Campaign" ],
        "summary" : "Delete a campaign",
        "description" : "Delete a campaign",
        "operationId" : "deleteCampaign",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "campaign Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:campaign", "read:campaign" ]
        } ]
      }
    },
    "/campaign/{id}/segment/{segId}/statistics" : {
      "get" : {
        "tags" : [ "Campaign" ],
        "summary" : "Find campaign statistics by Id",
        "description" : "Returns campaign statistics",
        "operationId" : "getCampaignStatsById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of campaign",
          "required" : true
        }, {
          "name" : "segId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of campaign segment",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/CampaignStatistics"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/campaign/{id}/segment/{segId}/distList" : {
      "get" : {
        "tags" : [ "Campaign" ],
        "summary" : "Get campaign DistributionList",
        "description" : "Returns campaign DistributionList",
        "operationId" : "getCampaignDistributionList",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of campaign",
          "required" : true
        }, {
          "name" : "segId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of campaign segment",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/DistributionList"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/campaign/{id}/segments" : {
      "get" : {
        "tags" : [ "Campaign" ],
        "summary" : "Get campaign segments",
        "description" : "Returns campaign segments",
        "operationId" : "getCampaignSegmentsById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of campaign to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/CampaignSegment"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/campaign/segment" : {
      "post" : {
        "tags" : [ "Campaign" ],
        "summary" : "Create new segment",
        "description" : "",
        "operationId" : "createCampaignSegment",
        "requestBody" : {
          "description" : "JSON model of segment to create",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/CampaignSegment"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    },
                    "id" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:campaign", "read:campaign" ]
        } ]
      }
    },
    "/campaign/segment/search" : {
      "post" : {
        "tags" : [ "Campaign" ],
        "summary" : "Find campaign Segments by query criteria",
        "description" : "",
        "operationId" : "findCampaignSegmentsByCriteria",
        "requestBody" : {
          "description" : "Query JSON to define the criteria",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/CampaignSegment"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:campaign", "read:campaign" ]
        } ]
      }
    },
    "/campaign/segment/{id}" : {
      "get" : {
        "tags" : [ "Campaign" ],
        "summary" : "Find campaign segment by Id",
        "description" : "Returns a single campaign segment",
        "operationId" : "getCampaignSegmentById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of campaign segment to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/CampaignSegment"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Campaign" ],
        "summary" : "Update an existing campaign segment",
        "description" : "",
        "operationId" : "updateCampaignSegment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of campaign segment to update"
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/CampaignSegment"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:campaign", "read:campaign" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Campaign" ],
        "summary" : "Delete a campaign segment",
        "description" : "Delete a campaign segment",
        "operationId" : "deleteCampaignSegment",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Campaign segment Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:campaign", "read:campaign" ]
        } ]
      }
    },
    "/campaign/distList" : {
      "post" : {
        "tags" : [ "Campaign" ],
        "summary" : "Create new distribution list",
        "description" : "",
        "operationId" : "createDistributionList",
        "requestBody" : {
          "description" : "JSON model of distribution list to create",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/DistributionList"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "$ref" : "#/components/schemas/ResponseHeader"
                    },
                    "id" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:campaign", "read:campaign" ]
        } ]
      }
    },
    "/campaign/distList/search" : {
      "post" : {
        "tags" : [ "Campaign" ],
        "summary" : "Find Distribution Lists by query criteria",
        "description" : "",
        "operationId" : "findDistListsByCriteria",
        "requestBody" : {
          "description" : "Query JSON to define the criteria",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/DistributionList"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:campaign", "read:campaign" ]
        } ]
      }
    },
    "/campaign/distList/{id}" : {
      "get" : {
        "tags" : [ "Campaign" ],
        "summary" : "Find campaign segment by Id",
        "description" : "Returns a single distribution list",
        "operationId" : "getDistributionListById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of distribution list return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/DistributionList"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Campaign" ],
        "summary" : "Update an existing distribution list",
        "description" : "",
        "operationId" : "updateDistributionList",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of distribution list to update"
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/DistributionList"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:campaign", "read:campaign" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Campaign" ],
        "summary" : "Delete a distribution list",
        "description" : "Delete distribution list",
        "operationId" : "deleteDistributionList",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "DistrbutionList to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:campaign", "read:campaign" ]
        } ]
      }
    },
    "/hospital/search" : {
      "post" : {
        "tags" : [ "Hospital" ],
        "summary" : "Find hospital by Criteria",
        "description" : "",
        "operationId" : "findHospitalsByCriteria",
        "requestBody" : {
          "description" : "Query JSON to define the criteria",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    },
                    "type" : {
                      "type" : "string"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Hospital"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "search:hospitals" ]
        } ]
      }
    },
    "/hospital/{id}" : {
      "post" : {
        "tags" : [ "Hospital" ],
        "summary" : "Get Hospital by Id",
        "description" : "",
        "operationId" : "getHospitalId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of hospital",
          "required" : true
        } ],
        "requestBody" : {
          "description" : "Hospital / Clinic type",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Hospital"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:hospitals" ]
        } ]
      }
    },
    "/hospital/{id}/doctors" : {
      "post" : {
        "tags" : [ "Hospital" ],
        "summary" : "Find All Doctors by Hospital Id",
        "description" : "",
        "operationId" : "findDoctorsByHospitalId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of hospital",
          "required" : true
        } ],
        "requestBody" : {
          "description" : "Hospital / Clinic type",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Doctor"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "search:hospitals" ]
        } ]
      }
    },
    "/hospital/{id}/rooms" : {
      "get" : {
        "tags" : [ "Hospital" ],
        "summary" : "Get All Rooms by Hospital Id",
        "description" : "",
        "operationId" : "getRoomsByHospitalId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of hospital",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Room"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "search:hospitals" ]
        } ]
      }
    },
    "/geolocation/feature" : {
      "post" : {
        "tags" : [ "Geo location" ],
        "summary" : "Get feature by Criteria",
        "description" : "",
        "operationId" : "getGeoFeatureByCriteria",
        "requestBody" : {
          "description" : "Query JSON to define the criteria",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/RequestHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/GeoSpacialFeature"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "search:geolocations" ]
        } ]
      }
    },
    "/resource/{id}" : {
      "get" : {
        "tags" : [ "Resource" ],
        "summary" : "Find resource by Id",
        "description" : "Returns a single resource",
        "operationId" : "getResourceById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of respurce to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Document"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/partner/id/generate" : {
      "post" : {
        "tags" : [ "Partner" ],
        "summary" : "Generate Id for external entity",
        "description" : "",
        "operationId" : "generateExternalId",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "object",
                        "properties" : {
                          "partnerId" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      }
    },
    "/chat/{id}/session" : {
      "get" : {
        "tags" : [ "Chat" ],
        "summary" : "Get chat session",
        "description" : "Returns chat session",
        "operationId" : "getChatSession",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "It of consultation/session id",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Chat"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:customers" ]
        } ]
      }
    },
    "/notification" : {
      "post" : {
        "tags" : [ "Notification" ],
        "summary" : "Notify customer",
        "description" : "",
        "operationId" : "notification",
        "requestBody" : {
          "description" : "Notify Customer",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "notificationType" : {
                      "type" : "string"
                    },
                    "body" : {
                      "$ref" : "#/components/schemas/NotificationResponse"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:doctor_external" ]
        } ]
      }
    },
    "/group" : {
      "post" : {
        "tags" : [ "Group" ],
        "summary" : "Create group",
        "description" : "",
        "operationId" : "createGroup",
        "requestBody" : {
          "description" : "Create Group",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Group"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:groups" ]
        } ]
      }
    },
    "/group/{id}" : {
      "get" : {
        "tags" : [ "Group" ],
        "summary" : "Get group by Id",
        "description" : "Returns a single group",
        "operationId" : "getGroupById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of group to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/Group"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Group Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:groups" ]
        } ]
      },
      "put" : {
        "tags" : [ "Group" ],
        "summary" : "Update an existing group",
        "description" : "",
        "operationId" : "updateGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of group to update"
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Group"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "write:groups" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Group" ],
        "summary" : "Delete a group",
        "description" : "",
        "operationId" : "deleteGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "group Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "delete:groups" ]
        } ]
      }
    },
    "/groups" : {
      "get" : {
        "tags" : [ "Group" ],
        "summary" : "Get all groups",
        "description" : "Returns all group",
        "operationId" : "getAllGroups",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Group"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Groups Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:groups" ]
        } ]
      }
    },
    "/group/search" : {
      "post" : {
        "tags" : [ "Group" ],
        "summary" : "Find group by query criteria",
        "description" : "",
        "operationId" : "findGroupByCriteria",
        "requestBody" : {
          "description" : "Query JSON to define the criteria",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Group"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "search:groups" ]
        } ]
      }
    },
    "/group/{id}/members" : {
      "get" : {
        "tags" : [ "Group" ],
        "summary" : "Get all group members",
        "description" : "",
        "operationId" : "getGroupMembers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/Customer"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "pru_api_auth" : [ "read:groups" ]
        } ]
      }
    },

    "/pmnCreateUserRole": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnCreateUserRole",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnReadUserRole": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnReadUserRole",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnFindUserRole": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnFindUserRole",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnUpdateUserRole": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnUpdateUserRole",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnUpdateUserRoles": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnUpdateUserRoles",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnDeleteUserRole": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnDeleteUserRole",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnDeleteUserRoles": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnDeleteUserRoles",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },

    "/pmnCreateUserGroup": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnCreateUserGroup",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnReadUserGroup": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnReadUserGroup",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnFindUserGroup": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnFindUserGroup",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnUpdateUserGroup": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnUpdateUserGroup",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnUpdateUserGroups": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnUpdateUserGroups",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnDeleteUserGroup": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnDeleteUserGroup",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnDeleteUserGroups": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnDeleteUserGroups",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },

    "/pmnCreateUserDivision": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnCreateUserDivision",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnReadUserDivision": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnReadUserDivision",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnReadUserDivisionPermissionOption": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnReadUserDivisionPermissionOption",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnFindUserDivision": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnFindUserDivision",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnUpdateUserDivision": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnUpdateUserDivision",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnUpdateUserDivisions": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnUpdateUserDivisions",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnDeleteUserDivision": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnDeleteUserDivision",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnDeleteUserDivisions": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnDeleteUserDivisions",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },

    "/pmnCreateUser": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnCreateUser",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnReadUser": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnReadUser",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnFindUser": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnFindUser",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnUpdateUser": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnUpdateUser",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnUpdateUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnUpdateUsers",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnDeleteUser": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnDeleteUser",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnDeleteUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnDeleteUsers",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnLockUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnLockUsers",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },

    "/pmnLoginUser": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnLoginUser",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnCheckToken": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnCheckToken",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnRefreshToken": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnRefreshToken",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnLogoutUser": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnLogoutUser",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnResetPassword": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnResetPassword",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnChangeEmail": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnChangeEmail",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnForgotPassword": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnForgotPassword",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },

    "/pmnFindAuditlog": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnFindAuditlog",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnReadAuditlog": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnReadAuditlog",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },

    "/pmnFindPending": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnFindPending",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnReadPending": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnReadPending",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnActivatePending": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnActivatePending",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },

    "/pmnGeneralRead": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnGeneralRead",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pmnGeneralUpdate": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnGeneralUpdate",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },

    "/pmnFindHospital": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "description": "Login User",
        "operationId": "pmnFindHospital",
        "requestBody": {
          "description": "JSON model of user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestHeader"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "body": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "header": {
                      "$ref": "#/components/schemas/ResponseHeader"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },


    "/pmn/admission/policy/{id}" : {
      "get" : {
        "tags" : [ "PMN Admission API" ],
        "summary" : "Search Hospital Portal policy information list",
        "operationId" : "pmnFindPolicyById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "description" : "Id of policy to return",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/PmnPolicyInformation"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/pmn/admission/policy/search" : {
      "post" : {
        "tags" : [ "PMN Admission API" ],
        "summary" : "Search Hospital Portal policy information list",
        "operationId" : "pmnFindPolicy",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/PmnPolicyInformation"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/pmn/case/open" : {
      "post" : {
        "tags" : [ "PMN Case API" ],
        "summary" : "Create Pulse case information list",
        "operationId" : "pmnCaseOpenCreate",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/PmnCaseOpenRequest"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/PmnCaseOpenResponse"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/pmn/case" : {
      "post" : {
        "tags" : [ "PMN Case API" ],
        "summary" : "Create Hospital Portal case information list",
        "operationId" : "pmnCaseCreate",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/PmnCaseInformation"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/PmnCaseInformation"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/pmn/case/{id}" : {
      "get" : {
        "tags" : [ "PMN Case API" ],
        "summary" : "Search Hospital Portal case information list",
        "operationId" : "pmnFindCaseById",
        "parameters" : [ {
          "$ref" : "#/components/parameters/idParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/PmnCaseInformation"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "put" : {
        "tags" : [ "PMN Case API" ],
        "summary" : "Update Hospital Portal case information list",
        "operationId" : "pmnCaseUpdate",
        "parameters" : [ {
          "$ref" : "#/components/parameters/idParam"
        } ],
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/PmnCaseInformation"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/PmnCaseInformation"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/pmn/case/search" : {
      "post" : {
        "tags" : [ "PMN Case API" ],
        "summary" : "Search Hospital Portal case information list",
        "operationId" : "pmnFindCase",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/PmnCaseInformationQuery"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/PmnCaseInformation"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/pmn/case/summary" : {
      "post" : {
        "tags" : [ "PMN Case API" ],
        "summary" : "Hospital Portal case summary information",
        "operationId" : "pmnSummaryCase",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/PmnCaseSummary"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/PmnCaseSummary"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/pmn/settings/general" : {
      "post" : {
        "tags" : [ "PMN General API" ],
        "summary" : "get Hospital Portal general settings",
        "operationId" : "pmnReadGeneral",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/PmnGeneralSettings"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "put" : {
        "tags" : [ "PMN General API" ],
        "summary" : "update Hospital Portal general settings",
        "operationId" : "pmnUpdateGeneral",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/PmnGeneralSettings"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/pmn/document" : {
      "post" : {
        "tags" : [ "PMN Document API" ],
        "summary" : "Generate Hospital Portal informed consent document",
        "operationId" : "pmnDocumentGenerate",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/PmnDocument"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/PmnDocument"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "put" : {
        "tags" : [ "PMN Document API" ],
        "summary" : "Save generated Hospital Portal informed consent document",
        "operationId" : "pmnDocumentSave",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/PmnDocument"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "$ref" : "#/components/schemas/PmnDocument"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/pmn/document/search" : {
      "post" : {
        "tags" : [ "PMN Document API" ],
        "summary" : "Generate Hospital Portal informed consent document",
        "operationId" : "pmnDocumentSearch",
        "requestBody" : {
          "description" : "",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RequestHeader"
                }, {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Query"
                    }
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/ResponseHeader"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "body" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/components/schemas/PmnDocument"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Party" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "clientId" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "active", "inactive", "guest" ]
          },
          "externalIds" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "contactDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Contact"
            }
          },
          "addressDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Address"
            }
          },
          "preferences" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/CustomerPreference"
            }
          },
          "bankAccounts" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BankAccount"
            }
          },
          "relatesTo" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Party"
              }
            }
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          },
          "workflows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Workflow"
            }
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Event"
            }
          },
          "documents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Document"
            }
          }
        },
        "xml" : {
          "name" : "Party"
        }
      },
      "Customer" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Party"
        }, {
          "type" : "object",
          "properties" : {
            "password" : {
              "type" : "string",
              "format" : "password"
            },
            "firstName" : {
              "type" : "string",
              "format" : "string"
            },
            "surName" : {
              "type" : "string",
              "format" : "string"
            },
            "middleName" : {
              "type" : "string",
              "format" : "string"
            },
            "dob" : {
              "type" : "string",
              "example" : "1970-01-01"
            },
            "sex" : {
              "type" : "string",
              "format" : "string"
            },
            "maritalStatus" : {
              "type" : "string"
            },
            "spouse" : {
              "$ref" : "#/components/schemas/Party"
            },
            "children" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Party"
              }
            },
            "salution" : {
              "type" : "string"
            },
            "nationality" : {
              "type" : "string"
            },
            "occupation" : {
              "$ref" : "#/components/schemas/Occupation"
            },
            "policies" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Policy"
              }
            },
            "claims" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Claim"
              }
            },
            "lifestyle" : {
              "$ref" : "#/components/schemas/CustomerLifestyle"
            },
            "agent" : {
              "$ref" : "#/components/schemas/Agent"
            },
            "transactions" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/TransactionDetail"
              }
            },
            "payments" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Payment"
              }
            },
            "billing" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BillingDetail"
              }
            },
            "complaints" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/CustomerComplaint"
              }
            },
            "comms" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Notification"
              }
            },
            "activeGroups" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Group"
              }
            },
            "inActiveGroups" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Group"
              }
            },
            "wallet" : {
              "$ref" : "#/components/schemas/Wallet"
            },
            "termsConditions" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/TermsCondition"
              }
            },
            "relations" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Relation"
              }
            }
          }
        } ]
      },
      "Address" : {
        "type" : "object",
        "properties" : {
          "line1" : {
            "type" : "string"
          },
          "line2" : {
            "type" : "string"
          },
          "line3" : {
            "type" : "string"
          },
          "line4" : {
            "type" : "string"
          },
          "line5" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "district" : {
            "type" : "string"
          },
          "zipcode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "countryCode" : {
            "type" : "string"
          },
          "landmark" : {
            "type" : "string"
          },
          "latitude" : {
            "type" : "number"
          },
          "longitude" : {
            "type" : "number"
          }
        },
        "xml" : {
          "name" : "Address"
        }
      },
      "Contact" : {
        "type" : "object",
        "properties" : {
          "channel" : {
            "type" : "string",
            "enum" : [ "email", "mobile", "phone", "twitter", "website", "device", "customer" ]
          },
          "customChannel" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Contact"
        }
      },
      "CustomerPreference" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "billingAddress", "preferredLanguage", "custom" ]
          },
          "customType" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          }
        },
        "xml" : {
          "name" : "CustomerPreference"
        }
      },
      "Audit" : {
        "type" : "object",
        "properties" : {
          "createTime" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          },
          "updateTime" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          }
        },
        "xml" : {
          "name" : "Audit"
        }
      },
      "BillingDetail" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "policy" : {
            "$ref" : "#/components/schemas/Policy"
          },
          "policyPayer" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "policyOwner" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "accountNo" : {
            "type" : "string"
          },
          "paymentMode" : {
            "type" : "string"
          },
          "billCycle" : {
            "type" : "string"
          },
          "paymentFreq" : {
            "type" : "string"
          },
          "autoDebit" : {
            "type" : "boolean"
          },
          "bankAccount" : {
            "$ref" : "#/components/schemas/BankAccount"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          }
        },
        "xml" : {
          "name" : "BillingDetail"
        }
      },
      "Card" : {
        "type" : "object",
        "properties" : {
          "cardNo" : {
            "type" : "string"
          },
          "expiry" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "cvv" : {
            "type" : "string"
          },
          "acctNo" : {
            "type" : "string"
          },
          "issuer" : {
            "type" : "string"
          },
          "acctType" : {
            "type" : "string",
            "enum" : [ "credit", "debit" ]
          },
          "token" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "MasterCard", "Visa", "Amex", "Other" ]
          },
          "otherType" : {
            "type" : "string"
          }
        }
      },
      "BillingInvoice" : {
        "type" : "object",
        "properties" : {
          "customer" : {
            "$ref" : "#/components/schemas/Party"
          },
          "policy" : {
            "$ref" : "#/components/schemas/Policy"
          },
          "billAmount" : {
            "type" : "number",
            "format" : "currency"
          },
          "accountNo" : {
            "type" : "string"
          },
          "invoiceDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "dueDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          }
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "loginId" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string",
            "format" : "password"
          },
          "status" : {
            "type" : "string",
            "description" : "User Status"
          },
          "realm" : {
            "type" : "string"
          },
          "roles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        },
        "xml" : {
          "name" : "User"
        }
      },
      "Event" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "severity" : {
            "type" : "string"
          },
          "priority" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "details" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "source" : {
            "type" : "string"
          },
          "owner" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          },
          "completionDate" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        },
        "xml" : {
          "name" : "Event"
        }
      },
      "Notification" : {
        "type" : "object",
        "properties" : {
          "channel" : {
            "type" : "string"
          },
          "subject" : {
            "type" : "string"
          },
          "template" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "values" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Document"
            }
          }
        },
        "xml" : {
          "name" : "Notification"
        }
      },
      "Message" : {
        "type" : "object",
        "properties" : {
          "sender" : {
            "type" : "string"
          },
          "to" : {
            "type" : "string"
          },
          "cc" : {
            "type" : "string"
          },
          "bcc" : {
            "type" : "string"
          },
          "channel" : {
            "type" : "string",
            "enum" : [ "email", "sms", "push" ]
          },
          "customChannel" : {
            "type" : "string"
          },
          "subject" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "template" : {
            "type" : "string"
          },
          "values" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Document"
            }
          }
        }
      },
      "Policy" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "policyNo" : {
            "type" : "string"
          },
          "clients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Party"
            }
          },
          "product" : {
            "$ref" : "#/components/schemas/Product"
          },
          "productOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductOption"
            }
          },
          "totalPremium" : {
            "type" : "number",
            "format" : "currency"
          },
          "term" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sumAssured" : {
            "type" : "number",
            "format" : "currency"
          },
          "paymentOption" : {
            "$ref" : "#/components/schemas/PaymentOption"
          },
          "contractDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "inceptionDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "endDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "status" : {
            "type" : "string"
          },
          "proposal" : {
            "$ref" : "#/components/schemas/Proposal"
          },
          "lifeAssured" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Customer"
            }
          },
          "beneficiaries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Beneficiary"
            }
          },
          "payers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Customer"
            }
          },
          "owners" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "Claim" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "typeCode" : {
            "type" : "string"
          },
          "eventDate" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          },
          "amountClaimed" : {
            "type" : "number",
            "format" : "currency"
          },
          "amountPaid" : {
            "type" : "number",
            "format" : "currency"
          },
          "desc" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string"
          },
          "hospital" : {
            "$ref" : "#/components/schemas/Hospital"
          },
          "doctor" : {
            "$ref" : "#/components/schemas/Doctor"
          },
          "documents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Document"
            }
          },
          "status" : {
            "type" : "string"
          },
          "disputed" : {
            "type" : "boolean"
          },
          "declineCode" : {
            "type" : "string"
          },
          "declineReason" : {
            "type" : "string"
          },
          "client" : {
            "$ref" : "#/components/schemas/Party"
          },
          "policy" : {
            "$ref" : "#/components/schemas/Policy"
          },
          "payment" : {
            "$ref" : "#/components/schemas/Payment"
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "firstPaymentDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "nextPaymentDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "approvalDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "settlementDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "cancellationDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "Product" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "shortName" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "effectiveFrom" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "effectiveTo" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "category" : {
            "type" : "string"
          },
          "characteristics" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "questionaire" : {
            "$ref" : "#/components/schemas/Questionaire"
          },
          "components" : {
            "$ref" : "#/components/schemas/ProductComponent"
          },
          "status" : {
            "type" : "string"
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        },
        "xml" : {
          "name" : "Product"
        }
      },
      "Rule" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "language" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RuleParam"
            }
          },
          "script" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Rule"
        }
      },
      "RuleParam" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "RuleParam"
        }
      },
      "ProductBundle" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "isOptional" : {
            "type" : "boolean"
          },
          "components" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductComponent"
            }
          },
          "childbundles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductBundle"
            }
          }
        }
      },
      "ProductComponent" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "tables" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DecisionTable"
            }
          },
          "documentTemplates" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DocumentTemplate"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "selectionCriteria" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "insuredObjs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InsuredObject"
            }
          },
          "version" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "InsuredObject" : {
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "selectionCriteria" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "coverages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Coverage"
            }
          }
        }
      },
      "Coverage" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "isRider" : {
            "type" : "string"
          },
          "event" : {
            "$ref" : "#/components/schemas/CoverageEvent"
          },
          "Indemnities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Indemnity"
            }
          }
        }
      },
      "CoverageEvent" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "selectionCriteria" : {
            "$ref" : "#/components/schemas/Rule"
          }
        }
      },
      "Indemnity" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "selectionCriteria" : {
            "$ref" : "#/components/schemas/Rule"
          },
          "computes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Rule"
            }
          }
        }
      },
      "DocumentTemplate" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "templateId" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "template" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "xml" : {
          "name" : "DocumentTemplate"
        }
      },
      "Document" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          },
          "filename" : {
            "type" : "string"
          },
          "format" : {
            "type" : "string"
          },
          "contentType" : {
            "type" : "string"
          },
          "extension" : {
            "type" : "string"
          },
          "compression" : {
            "type" : "string"
          },
          "encryption" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "url" : {
            "type" : "string"
          },
          "content" : {
            "type" : "string",
            "format" : "base64"
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        },
        "xml" : {
          "name" : "Document"
        }
      },
      "DecisionTable" : {
        "type" : "object",
        "properties" : {
          "columns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TableColumn"
            }
          }
        },
        "xml" : {
          "name" : "DecisionTable"
        }
      },
      "TableColumn" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "key" : {
            "type" : "boolean"
          },
          "row" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        },
        "xml" : {
          "name" : "TableColumn"
        }
      },
      "Questionaire" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "questionGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionGroup"
            }
          }
        },
        "xml" : {
          "name" : "Questionaire"
        }
      },
      "QuestionGroup" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "questionSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Question"
            }
          }
        },
        "xml" : {
          "name" : "QuestionGroup"
        }
      },
      "Question" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "question" : {
            "type" : "string"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnswerOption"
            }
          },
          "multichoice" : {
            "type" : "boolean"
          },
          "truefalse" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "QuestionAnswer"
        }
      },
      "Answer" : {
        "type" : "object"
      },
      "TextAnswer" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Answer"
        }, {
          "type" : "object",
          "properties" : {
            "text" : {
              "type" : "string"
            }
          }
        } ]
      },
      "OptionAnswer" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Answer"
        }, {
          "type" : "object",
          "properties" : {
            "selectedOptions" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AnswerOption"
              }
            }
          }
        } ]
      },
      "BooleanAnswer" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Answer"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "AnswerOption" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "QuestionAnswer" : {
        "type" : "object",
        "properties" : {
          "question" : {
            "$ref" : "#/components/schemas/Question"
          },
          "answers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnswerOption"
            }
          }
        }
      },
      "IllusTable" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "cols" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "rows" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "Occupation" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "group" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          }
        }
      },
      "CustomerLifestyle" : {
        "type" : "object",
        "properties" : {
          "ageNextBday" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ageRange" : {
            "type" : "string"
          },
          "isSmoker" : {
            "type" : "boolean"
          },
          "height" : {
            "type" : "number",
            "format" : "float"
          },
          "heightUnit" : {
            "type" : "string"
          },
          "weight" : {
            "type" : "number",
            "format" : "float"
          },
          "weightUnit" : {
            "type" : "string"
          },
          "bmi" : {
            "type" : "number",
            "format" : "float"
          },
          "bmiDesc" : {
            "type" : "string"
          },
          "allergies" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "familyHistory" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "kycDetails" : {
            "$ref" : "#/components/schemas/KYC"
          },
          "financialStatus" : {
            "$ref" : "#/components/schemas/Financials"
          },
          "otherActivities" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "medicalHistory" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MedicalIllness"
            }
          }
        },
        "xml" : {
          "name" : "CustomerLifestyle"
        }
      },
      "MedicalIllness" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "critical" : {
            "type" : "boolean"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "diagnosedDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          }
        },
        "xml" : {
          "name" : "MedicalIllness"
        }
      },
      "Financials" : {
        "type" : "object",
        "properties" : {
          "income" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Income"
            }
          },
          "assets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Asset"
            }
          },
          "liabilities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Liability"
            }
          }
        }
      },
      "Asset" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "valuation" : {
            "type" : "string",
            "format" : "currency"
          },
          "currency" : {
            "type" : "string"
          }
        }
      },
      "Liability" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "term" : {
            "type" : "string"
          },
          "valuation" : {
            "type" : "string",
            "format" : "currency"
          },
          "currency" : {
            "type" : "string"
          }
        }
      },
      "Income" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string"
          },
          "frequency" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "string",
            "format" : "currency"
          },
          "currency" : {
            "type" : "string"
          }
        }
      },
      "CustomerComplaint" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "issueCode" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "priority" : {
            "type" : "string"
          },
          "careLevel" : {
            "type" : "string"
          },
          "serviceId" : {
            "type" : "string"
          },
          "resolutionCode" : {
            "type" : "string"
          },
          "resolutionDate" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "linkedComplaints" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/CustomerComplaint"
            }
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "Workflow" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "falloutCode" : {
            "type" : "string"
          },
          "falloutDesc" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          },
          "completionDate" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          }
        },
        "xml" : {
          "name" : "Wokflow"
        }
      },
      "BankAccount" : {
        "type" : "object",
        "properties" : {
          "bankName" : {
            "type" : "string"
          },
          "bankCode" : {
            "type" : "string"
          },
          "branchCode" : {
            "type" : "string"
          },
          "accountNo" : {
            "type" : "string"
          },
          "accountName" : {
            "type" : "string"
          },
          "accountType" : {
            "type" : "string"
          }
        }
      },
      "TransactionDetail" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "referenceNo" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number",
            "format" : "currency"
          },
          "currency" : {
            "type" : "string"
          },
          "paymentMode" : {
            "type" : "string"
          },
          "detail" : {
            "type" : "string"
          },
          "transactionType" : {
            "type" : "string"
          },
          "transactionDate" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          },
          "policy" : {
            "$ref" : "#/components/schemas/Policy"
          },
          "status" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "TransactionDetail"
        }
      },
      "Payment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "txRef" : {
            "type" : "string"
          },
          "orderRef" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number",
            "format" : "currency"
          },
          "desc" : {
            "type" : "string"
          },
          "paymentDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "invoice" : {
            "$ref" : "#/components/schemas/BillingInvoice"
          }
        }
      },
      "PaymentRequest" : {
        "type" : "object",
        "properties" : {
          "orderRef" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string"
          },
          "txType" : {
            "type" : "string",
            "enum" : [ "sale", "auth", "void", "refund" ]
          },
          "options" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "parts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PaymentPart"
            }
          }
        }
      },
      "PaymentPart" : {
        "type" : "object",
        "properties" : {
          "txRef" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number",
            "format" : "currency"
          },
          "card" : {
            "$ref" : "#/components/schemas/Card"
          }
        }
      },
      "PaymentResponse" : {
        "type" : "object",
        "properties" : {
          "orderRef" : {
            "type" : "string"
          },
          "txRefs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AccountStmt" : {
        "type" : "object"
      },
      "PaymentOption" : {
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string"
          },
          "frequency" : {
            "type" : "string"
          }
        }
      },
      "QuoteRequest" : {
        "type" : "object",
        "properties" : {
          "lifes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Party"
            }
          },
          "product" : {
            "$ref" : "#/components/schemas/ProductOption"
          },
          "paymentOption" : {
            "$ref" : "#/components/schemas/PaymentOption"
          },
          "generateDoc" : {
            "type" : "boolean"
          }
        }
      },
      "Quote" : {
        "type" : "object",
        "properties" : {
          "lifes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Party"
            }
          },
          "product" : {
            "$ref" : "#/components/schemas/ProductOption"
          },
          "paymentOption" : {
            "$ref" : "#/components/schemas/PaymentOption"
          },
          "illusTables" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IllusTable"
            }
          },
          "proposalDoc" : {
            "$ref" : "#/components/schemas/Document"
          }
        }
      },
      "Proposal" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "clients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Customer"
            }
          },
          "product" : {
            "$ref" : "#/components/schemas/ProductOption"
          },
          "paymentOption" : {
            "$ref" : "#/components/schemas/PaymentOption"
          },
          "agent" : {
            "$ref" : "#/components/schemas/Agent"
          },
          "payments" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Payment"
            }
          },
          "questionAnswers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionAnswer"
            }
          },
          "declarations" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "beneficiaries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Beneficiary"
            }
          },
          "signatures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Document"
            }
          },
          "documents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Document"
            }
          },
          "auditDetails" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "ProductOption" : {
        "type" : "object",
        "properties" : {
          "product" : {
            "$ref" : "#/components/schemas/Product"
          },
          "totalPremium" : {
            "type" : "number"
          },
          "totalSumAssured" : {
            "type" : "number"
          },
          "paymentFrequency" : {
            "type" : "string",
            "enum" : [ "yearly", "monthly", "quaterly" ]
          },
          "options" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "components" : {
            "$ref" : "#/components/schemas/ProductComponentOption"
          },
          "policy" : {
            "$ref" : "#/components/schemas/Policy"
          }
        }
      },
      "ProductComponentOption" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/ProductComponent"
          },
          "term" : {
            "type" : "integer"
          },
          "benefitTerm" : {
            "type" : "integer"
          },
          "premiumTerm" : {
            "type" : "integer"
          },
          "sumAssured" : {
            "type" : "number"
          },
          "premium" : {
            "type" : "number"
          },
          "options" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "policy" : {
            "$ref" : "#/components/schemas/Policy"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "Agent" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Party"
        } ],
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "office" : {
            "type" : "string"
          },
          "supervisor" : {
            "$ref" : "#/components/schemas/Agent"
          },
          "teams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Agent"
            }
          }
        }
      },
      "Entity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "Conversation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "topic" : {
            "type" : "string"
          },
          "detail" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string",
            "enum" : [ "email", "chat", "phone" ]
          },
          "client" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "party" : {
            "$ref" : "#/components/schemas/Party"
          },
          "isBot" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "active", "closed", "archived" ]
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          },
          "outcome" : {
            "$ref" : "#/components/schemas/ConversationOutcome"
          }
        }
      },
      "ConversationMessage" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "parent" : {
            "$ref" : "#/components/schemas/ConversationMessage"
          },
          "session" : {
            "$ref" : "#/components/schemas/Conversation"
          },
          "kind" : {
            "type" : "string",
            "enum" : [ "Question", "Answer", "Info" ]
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          },
          "message" : {
            "$ref" : "#/components/schemas/MessageBody"
          }
        }
      },
      "MessageBody" : {
        "type" : "object",
        "properties" : {
          "attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Document"
            }
          }
        }
      },
      "InfoMessageBody" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MessageBody"
        }, {
          "type" : "object",
          "properties" : {
            "text" : {
              "type" : "string"
            },
            "contentUrl" : {
              "type" : "string"
            }
          }
        } ]
      },
      "QuestionMessageBody" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MessageBody"
        }, {
          "type" : "object",
          "properties" : {
            "question" : {
              "$ref" : "#/components/schemas/Question"
            }
          }
        } ]
      },
      "AnswerMessageBody" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MessageBody"
        }, {
          "type" : "object",
          "properties" : {
            "answer" : {
              "$ref" : "#/components/schemas/Answer"
            }
          }
        } ]
      },
      "ConversationOutcome" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "resolutionCode" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "actions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "DiagnosticOutcome" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConversationOutcome"
        }, {
          "type" : "object",
          "properties" : {
            "diagnosis" : {
              "$ref" : "#/components/schemas/Diagnosis"
            }
          }
        } ]
      },
      "MedicineRequest" : {
        "type" : "object",
        "properties" : {
          "patient" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "medicine" : {
            "$ref" : "#/components/schemas/Medicine"
          },
          "quantity" : {
            "type" : "number"
          },
          "unit" : {
            "type" : "string"
          },
          "allergies" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "prescription" : {
            "$ref" : "#/components/schemas/Prescription"
          },
          "deliveryAddress" : {
            "$ref" : "#/components/schemas/Address"
          },
          "patientHistory" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "priority" : {
            "type" : "string",
            "enum" : [ "normal", "express" ]
          },
          "deliveryMode" : {
            "type" : "string",
            "enum" : [ "homedelivery", "pickup" ]
          },
          "onMedicines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Medicine"
            }
          }
        }
      },
      "MedicineResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "confirmed", "outofstock", "declined", "notavailable" ]
          },
          "deliveryDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "unitPrice" : {
            "type" : "number"
          },
          "totalPrice" : {
            "type" : "number"
          },
          "tax" : {
            "type" : "number"
          },
          "currency" : {
            "type" : "string"
          }
        }
      },
      "Diagnosis" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "severity" : {
            "type" : "string"
          },
          "symptoms" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "organs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "observations" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "notes" : {
            "type" : "string"
          },
          "prescriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Prescription"
            }
          },
          "doctor" : {
            "$ref" : "#/components/schemas/Doctor"
          },
          "testReports" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TestReport"
            }
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "TestReport" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TestResult"
            }
          },
          "report" : {
            "$ref" : "#/components/schemas/Document"
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "TestResult" : {
        "type" : "object",
        "properties" : {
          "testname" : {
            "type" : "string"
          },
          "result" : {
            "type" : "string"
          },
          "value" : {
            "type" : "number"
          },
          "unit" : {
            "type" : "string"
          },
          "range" : {
            "type" : "object",
            "properties" : {
              "min" : {
                "type" : "number"
              },
              "max" : {
                "type" : "number"
              }
            }
          }
        }
      },
      "AppointmentTime" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "startTime" : {
            "type" : "string",
            "example" : "17:32:28"
          },
          "duration" : {
            "type" : "integer",
            "description" : "Duration in minutes"
          },
          "endTime" : {
            "type" : "string",
            "example" : "17:32:28"
          }
        }
      },
      "DoctorAppointment" : {
        "type" : "object",
        "properties" : {
          "doctor" : {
            "$ref" : "#/components/schemas/Doctor"
          },
          "patient" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "schedule" : {
            "type" : "string",
            "enum" : [ "now", "later" ]
          },
          "timeslots" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppointmentTime"
            }
          },
          "diagnosisHistory" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Diagnosis"
            }
          },
          "patientCondition" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "home_visit", "video_chat", "hospital_visit", "audio_chat" ]
          },
          "auditDetails" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "DoctorAppointmentResponse" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string"
          },
          "patientId" : {
            "type" : "string"
          },
          "doctorId" : {
            "type" : "string"
          },
          "doctorName" : {
            "type" : "string"
          },
          "appointmentId" : {
            "type" : "string"
          },
          "appointmentTime" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          },
          "appointmentDuration" : {
            "type" : "string",
            "example" : "30 mins"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "NotificationResponse" : {
        "type" : "object",
        "properties" : {
          "patientId" : {
            "type" : "string"
          },
          "reportIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Prescription" : {
        "type" : "object",
        "properties" : {
          "notes" : {
            "type" : "string"
          },
          "medications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Medication"
            }
          },
          "document" : {
            "$ref" : "#/components/schemas/Document"
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "Medication" : {
        "type" : "object",
        "properties" : {
          "medicine" : {
            "$ref" : "#/components/schemas/Medicine"
          },
          "dosage" : {
            "type" : "object",
            "properties" : {
              "quantity" : {
                "type" : "number"
              },
              "unit" : {
                "type" : "string"
              },
              "frequency" : {
                "type" : "string"
              },
              "days" : {
                "type" : "integer"
              },
              "endDate" : {
                "type" : "string",
                "example" : "2017-07-21"
              }
            }
          }
        }
      },
      "Doctor" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Party"
        }, {
          "type" : "object",
          "properties" : {
            "specialities" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "virtual" : {
              "type" : "boolean"
            },
            "rating" : {
              "type" : "number"
            },
            "hospitals" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Hospital"
              }
            },
            "consultModes" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "clinic", "hospital", "video", "home" ]
              }
            },
            "availabilities" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DoctorAvailability"
              }
            }
          }
        } ]
      },
      "DoctorAvailability" : {
        "type" : "object",
        "properties" : {
          "consultMode" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "clinic", "hospital", "video", "home" ]
            }
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "startTime" : {
            "type" : "string",
            "example" : "17:32:28"
          },
          "endTime" : {
            "type" : "string",
            "example" : "17:32:28"
          },
          "dates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "2017-07-21"
            }
          }
        }
      },
      "KYC" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "Medicine" : {
        "type" : "object",
        "properties" : {
          "productCode" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "longName" : {
            "type" : "string"
          },
          "strength" : {
            "type" : "string"
          },
          "preparation" : {
            "type" : "string"
          },
          "manufacturer" : {
            "type" : "string"
          },
          "expiry" : {
            "type" : "string"
          }
        }
      },
      "AmbulanceRequest" : {
        "type" : "object",
        "properties" : {
          "from" : {
            "$ref" : "#/components/schemas/Address"
          },
          "to" : {
            "$ref" : "#/components/schemas/Address"
          },
          "time" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "patientCondition" : {
            "type" : "string"
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "AmbulanceResponse" : {
        "type" : "object",
        "properties" : {
          "distance" : {
            "type" : "number"
          },
          "distanceUnit" : {
            "type" : "string"
          },
          "eta" : {
            "type" : "number"
          },
          "etaUnit" : {
            "type" : "string"
          },
          "tripDuration" : {
            "type" : "number"
          },
          "durationUnit" : {
            "type" : "string"
          },
          "fare" : {
            "type" : "number"
          },
          "mapLocationUrl" : {
            "type" : "string"
          }
        }
      },
      "UnderWriterResponse" : {
        "type" : "object",
        "properties" : {
          "outcome" : {
            "type" : "string",
            "enum" : [ "approved", "rejected" ]
          },
          "loadingFactor" : {
            "type" : "number"
          },
          "premium" : {
            "type" : "string",
            "format" : "currency"
          },
          "totalSumAssured" : {
            "type" : "string",
            "format" : "currency"
          },
          "term" : {
            "type" : "integer"
          }
        }
      },
      "Header" : {
        "type" : "object",
        "properties" : {
          "msgId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "source" : {
            "type" : "string"
          },
          "correlationId" : {
            "type" : "string"
          },
          "access_token" : {
            "type" : "string"
          },
          "refresh_token" : {
            "type" : "string"
          }
        },
        "required" : [ "txId", "timestamp", "source" ],
        "additionalProperties" : {
          "type" : "string"
        }
      },
      "RequestHeader" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Header"
        }, {
          "type" : "object",
          "properties" : {
            "sequence" : {
              "type" : "string"
            },
            "callback" : {
              "type" : "string",
              "format" : "uri"
            }
          }
        } ]
      },
      "ResponseHeader" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Header"
        }, {
          "type" : "object",
          "properties" : {
            "status" : {
              "$ref" : "#/components/schemas/ResponseStatus"
            },
            "poll" : {
              "type" : "string",
              "format" : "uri"
            }
          }
        } ]
      },
      "ResponseStatus" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer"
          },
          "message" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "Hospital" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "hospital", "clinic" ]
          },
          "timing" : {
            "type" : "string"
          },
          "capabilities" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "enum" : [ "clinic", "hospital" ]
          },
          "specialities" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "contactDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Contact"
            }
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "doctors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Doctor"
            }
          },
          "rooms" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Room"
            }
          }
        }
      },
      "Query" : {
        "type" : "object",
        "properties" : {
          "projs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "filter" : {
            "$ref" : "#/components/schemas/FilterExpression"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "orderBy" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "prop" : {
                  "type" : "string"
                },
                "order" : {
                  "type" : "string",
                  "enum" : [ "asc", "desc" ]
                }
              }
            }
          }
        }
      },
      "FilterExpression" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/LogicalExpression"
        }, {
          "$ref" : "#/components/schemas/SimpleExpression"
        } ]
      },
      "LogicalExpression" : {
        "type" : "object",
        "properties" : {
          "lhs" : {
            "$ref" : "#/components/schemas/FilterExpression"
          },
          "op" : {
            "type" : "string",
            "enum" : [ "and", "or", "not" ]
          },
          "rhs" : {
            "$ref" : "#/components/schemas/FilterExpression"
          }
        }
      },
      "SimpleExpression" : {
        "type" : "object",
        "properties" : {
          "lhs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "op" : {
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/AnyValue"
          }
        }
      },
      "AnyValue" : { },
      "FundHouse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "Note" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Document"
            }
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "Consulation" : {
        "type" : "object",
        "properties" : {
          "doctor" : {
            "$ref" : "#/components/schemas/Doctor"
          },
          "note" : {
            "$ref" : "#/components/schemas/Note"
          },
          "prescription" : {
            "$ref" : "#/components/schemas/Prescription"
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "Fund" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "open_ended", "close_ended", "exchange_traded", "unit_investment" ]
          },
          "plan" : {
            "type" : "string",
            "enum" : [ "growth", "divident" ]
          },
          "amc" : {
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/FundValue"
          },
          "category" : {
            "type" : "string"
          },
          "sector" : {
            "type" : "string"
          },
          "isDivident" : {
            "type" : "boolean"
          },
          "launchDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "entryLoad" : {
            "type" : "number"
          },
          "exitLoad" : {
            "type" : "number"
          },
          "minimumInvestment" : {
            "type" : "string",
            "format" : "currency"
          },
          "holdings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FundHolding"
            }
          }
        }
      },
      "FundValue" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "format" : "currency"
          },
          "asset" : {
            "type" : "string",
            "format" : "currency"
          },
          "currency" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "returns" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "time" : {
                  "type" : "string"
                },
                "percent" : {
                  "type" : "number"
                }
              }
            }
          }
        }
      },
      "FundHolding" : {
        "type" : "object",
        "properties" : {
          "company" : {
            "type" : "string"
          },
          "sector" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string",
            "format" : "currency"
          },
          "assetPercent" : {
            "type" : "number"
          }
        }
      },
      "FundPerformance" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FundValue"
            }
          }
        }
      },
      "Schedule" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          },
          "endDate" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          },
          "repeat" : {
            "type" : "object",
            "properties" : {
              "interval" : {
                "type" : "number"
              },
              "unit" : {
                "type" : "string",
                "enum" : [ "second", "minute", "hour", "day", "month", "year" ]
              }
            }
          },
          "cron" : {
            "type" : "string"
          }
        }
      },
      "Campaign" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "categories" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "subject" : {
            "$ref" : "#/components/schemas/DocumentTemplate"
          },
          "content" : {
            "$ref" : "#/components/schemas/DocumentTemplate"
          },
          "segments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CampaignSegment"
            }
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          },
          "distributionLists" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DistributionList"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "draft", "published", "running paused" ]
          }
        }
      },
      "DistributionList" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "channel" : {
            "type" : "string",
            "enum" : [ "email", "phone", "sms", "web" ]
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          },
          "ids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CampaignSegment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "critria" : {
            "type" : "string"
          },
          "distributionLists" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DistributionList"
            }
          }
        }
      },
      "CampaignStatistics" : {
        "type" : "object",
        "properties" : {
          "totalResponses" : {
            "type" : "number"
          },
          "totalClicks" : {
            "type" : "number"
          },
          "totalabandoned" : {
            "type" : "number"
          },
          "totalLeads" : {
            "type" : "number"
          },
          "totalContact" : {
            "type" : "number"
          },
          "convertedLeads" : {
            "type" : "number"
          },
          "metrics" : {
            "type" : "object"
          }
        }
      },
      "CDCMessage" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "Id of the entity in the source system"
          },
          "source" : {
            "type" : "string",
            "description" : "Name of the source system generating this CDC message"
          },
          "entityType" : {
            "type" : "string",
            "description" : "Entity type in the source system, this loosly translates to table name in RDMBS"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "tx_begin", "create", "update", "delete", "tx_commit" ]
          },
          "txId" : {
            "type" : "string",
            "description" : "Id of the transaction that caused this change"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "timestamp when the change was captured"
          },
          "seqId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Unique increasing sequence no"
          },
          "entity" : {
            "type" : "object",
            "description" : "Body JSON of the CDC message"
          }
        }
      },
      "Room" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "cost" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "hospital" : {
            "$ref" : "#/components/schemas/Hospital"
          }
        }
      },
      "GeoSpacialFeature" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "longitude" : {
            "type" : "number",
            "format" : "float"
          },
          "latitude" : {
            "type" : "number",
            "format" : "float"
          },
          "features" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "Connection" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "from" : {
            "type" : "string"
          },
          "to" : {
            "type" : "string"
          },
          "group" : {
            "$ref" : "#/components/schemas/Group"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "invited", "accepted", "rejected", "requested" ]
          },
          "relationshipType" : {
            "type" : "string"
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "Beneficiary" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "customer" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "startDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "endDate" : {
            "type" : "string",
            "example" : "2017-07-21"
          },
          "relationshipType" : {
            "type" : "string"
          },
          "percentage" : {
            "type" : "number",
            "format" : "float"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "active", "inactive" ]
          },
          "policies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy"
            }
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "Chat" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "chatToken" : {
            "type" : "string"
          },
          "platform" : {
            "type" : "string"
          },
          "apiKey" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "Group" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "active", "inactive" ]
          },
          "classification" : {
            "type" : "string"
          },
          "documents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Document"
            }
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "Currency" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number",
            "format" : "float"
          },
          "unit" : {
            "type" : "string"
          }
        }
      },
      "Wallet" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "currencies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Currency"
            }
          }
        }
      },
      "TermsCondition" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "org" : {
            "type" : "string"
          },
          "consent" : {
            "type" : "string",
            "enum" : [ "accept", "reject" ]
          },
          "consentDate" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          }
        }
      },
      "Relation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "customer" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "type" : {
            "type" : "string",
            "example" : "Emergency Contact"
          },
          "relationshipType" : {
            "type" : "string"
          },
          "preference" : {
            "type" : "string",
            "enum" : [ "primary", "secondary", "other" ]
          },
          "auditDetail" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "Appointment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "schedule" : {
            "type" : "string",
            "enum" : [ "now", "later" ]
          },
          "timeslots" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppointmentTime"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "notes" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "home_visit", "video_chat", "hospital_visit", "audio_chat" ]
          },
          "auditDetails" : {
            "$ref" : "#/components/schemas/Audit"
          }
        }
      },
      "PmnBaseModel" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type_" : {
            "type" : "string"
          },
          "active" : {
            "type" : "string",
            "example" : "active"
          }
        }
      },
      "PmnDataAuditModel" : {
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string"
          },
          "created" : {
            "type" : "string"
          },
          "updatedBy" : {
            "type" : "string"
          },
          "updated" : {
            "type" : "string"
          }
        }
      },
      "PmnUserGroup" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "permissions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "PmnUserRole" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PmnDataAuditModel"
        }, {
          "$ref" : "#/components/schemas/PmnBaseModel"
        }, {
          "type" : "object",
          "properties" : {
            "groupId" : {
              "type" : "string"
            },
            "name" : {
              "type" : "string"
            },
            "permissions" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "PmnUserDivision" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "roleId" : {
            "type" : "string"
          },
          "entityId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "permissions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "PmnUser" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PmnDataAuditModel"
        }, {
          "$ref" : "#/components/schemas/PmnBaseModel"
        }, {
          "type" : "object"
        } ],
        "properties" : {
          "divisionId" : {
            "type" : "string"
          },
          "entityId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "primaryEmail" : {
            "type" : "string"
          },
          "secondaryEmail" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "uniqueEntityId" : {
            "type" : "string"
          },
          "isPending" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "active", "inactive", "pending" ]
          }
        }
      },
      "PmnUserLoginRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "PmnUserLoginResponse" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          },
          "menu" : {
            "type" : "string"
          },
          "entity" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "PmnUserLogout" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          }
        }
      },
      "PmnUserRefreshToken" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          }
        }
      },
      "PmnUserCredential" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "currentPassword" : {
            "type" : "string"
          },
          "oldPassword" : {
            "type" : "string"
          }
        }
      },
      "PmnGeneralSettings" : {
        "type" : "object",
        "properties" : {
          "defaultPassword" : {
            "type" : "string"
          },
          "timeoutDuration" : {
            "type" : "integer"
          },
          "failedLoginAttempt" : {
            "type" : "integer"
          },
          "forcedChangedPasswordDays" : {
            "type" : "integer"
          },
          "maxDocumentUpload" : {
            "type" : "integer"
          },
          "ipBlackList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ipWhiteList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "PmnPolicyInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "policyNo" : {
            "type" : "string"
          },
          "clients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Party"
            }
          },
          "isWaitingPeriod" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string"
          },
          "eligibilityStatus" : {
            "type" : "string"
          },
          "lifeAssured" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Customer"
            }
          },
          "owners" : {
            "$ref" : "#/components/schemas/Customer"
          }
        }
      },
      "PmnMenu" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          }
        }
      },
      "PmnEntity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          }
        }
      },
      "PmnDocument" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "consent", "medical", "guarantee", "payment", "stateid" ]
          },
          "data" : {
            "type" : "string",
            "description" : "base64 content of the file"
          },
          "name" : {
            "type" : "string"
          },
          "params" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "example" : {
              "policyNumber" : "GM000111234",
              "claimNumber" : 7890,
              "subDoc" : "approval",
              "caseId" : 1234,
              "ownerName" : "Owner Name Alpha",
              "ownerNumber" : 123456789,
              "laName" : "LA Name Beta",
              "laNumber" : 67890,
              "laDob" : "1970-01-01",
              "timeStamp" : 20190514143000
            }
          }
        }
      },
      "PmnClaimInformation" : {
        "type" : "object",
        "properties" : {
          "policyNo" : {
            "type" : "string"
          },
          "uniqueNo" : {
            "type" : "string"
          },
          "caseNo" : {
            "type" : "string"
          },
          "planId" : {
            "type" : "string"
          },
          "corporateCode" : {
            "type" : "string"
          },
          "patientName" : {
            "type" : "string"
          },
          "providerCode" : {
            "type" : "string"
          },
          "providerName" : {
            "type" : "string"
          },
          "admissionDate" : {
            "type" : "string"
          },
          "dischargeDate" : {
            "type" : "string"
          },
          "details" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "string"
                },
                "dignosis" : {
                  "type" : "string"
                },
                "benefitCode" : {
                  "type" : "string"
                },
                "benefitName" : {
                  "type" : "string"
                },
                "unitFreq" : {
                  "type" : "string"
                },
                "amountCharge" : {
                  "type" : "number"
                },
                "amountDecline" : {
                  "type" : "number"
                },
                "amountPaid" : {
                  "type" : "number"
                },
                "amountRefund" : {
                  "type" : "number"
                },
                "doctorName" : {
                  "type" : "string"
                },
                "doctorCode" : {
                  "type" : "string"
                },
                "doctorType" : {
                  "type" : "string"
                },
                "procedureCode" : {
                  "type" : "string"
                },
                "procedureName" : {
                  "type" : "string"
                },
                "isMultiple" : {
                  "type" : "boolean"
                },
                "batchNo" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "PmnCaseInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "patient" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "clientNo" : {
                "type" : "string"
              },
              "cardNo" : {
                "type" : "string"
              },
              "dob" : {
                "type" : "string"
              },
              "gender" : {
                "type" : "string"
              },
              "stateId" : {
                "type" : "string",
                "description" : "KTP"
              }
            }
          },
          "policy" : {
            "type" : "object",
            "properties" : {
              "policyNo" : {
                "type" : "string"
              },
              "policyHolder" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "gender" : {
                    "type" : "string"
                  },
                  "dob" : {
                    "type" : "string"
                  },
                  "stateId" : {
                    "type" : "string"
                  },
                  "cardNo" : {
                    "type" : "string"
                  }
                }
              },
              "lifeAssured" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "gender" : {
                    "type" : "string"
                  },
                  "dob" : {
                    "type" : "string"
                  },
                  "cardNo" : {
                    "type" : "string"
                  }
                }
              },
              "productName" : {
                "type" : "string"
              },
              "status" : {
                "type" : "string"
              },
              "validPeriod" : {
                "type" : "string"
              },
              "rider" : {
                "type" : "string"
              },
              "room" : {
                "type" : "object",
                "properties" : {
                  "price" : {
                    "type" : "string"
                  },
                  "plan" : {
                    "type" : "string"
                  }
                }
              },
              "availableLimit" : {
                "type" : "string"
              }
            }
          },
          "admissionDate" : {
            "type" : "string"
          },
          "tpa" : {
            "type" : "object",
            "properties" : {
              "submissionId" : {
                "type" : "string"
              },
              "status" : {
                "type" : "string"
              },
              "submissionDate" : {
                "type" : "string"
              }
            }
          },
          "medicalRecord" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "claim" : {
            "$ref" : "#/components/schemas/PmnClaimInformation"
          },
          "informedConsent" : {
            "type" : "object",
            "properties" : {
              "docId" : {
                "type" : "string"
              },
              "docType" : {
                "type" : "string"
              },
              "policyNumber" : {
                "type" : "string",
                "example" : 111234
              },
              "claimNumber" : {
                "type" : "string",
                "example" : 7890
              },
              "subDoc" : {
                "type" : "string",
                "example" : "approval"
              },
              "caseId" : {
                "type" : "string",
                "example" : 1234
              },
              "ownerName" : {
                "type" : "string",
                "example" : "Owner Name Alpha"
              },
              "ownerNumber" : {
                "type" : "string",
                "example" : 123456789
              },
              "laName" : {
                "type" : "string",
                "example" : "LA Name Beta"
              },
              "laNumber" : {
                "type" : "string",
                "example" : 67890
              },
              "laDob" : {
                "type" : "string",
                "example" : "1970-01-01"
              },
              "timeStamp" : {
                "type" : "string",
                "example" : 20190514143000
              }
            }
          }
        }
      },
      "PmnCaseInformationQuery" : {
        "type" : "object",
        "properties" : {
          "admissionId" : {
            "type" : "string"
          },
          "policyNo" : {
            "type" : "string"
          },
          "patient" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "dob" : {
                "type" : "string"
              }
            }
          },
          "admissionDate" : {
            "type" : "object",
            "properties" : {
              "start" : {
                "type" : "string"
              },
              "finish" : {
                "type" : "string"
              }
            }
          },
          "limit" : {
            "type" : "integer"
          },
          "offset" : {
            "type" : "integer"
          },
          "sortBy" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "asc", "desc" ]
              }
            }
          }
        }
      },
      "PmnCaseSummary" : {
        "type" : "object",
        "properties" : {
          "hospitalId" : {
            "type" : "string"
          },
          "finishDate" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "string"
                },
                "amount" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "PmnRecordDateObject" : {
        "type" : "object",
        "properties" : {
          "day" : {
            "type" : "integer"
          },
          "month" : {
            "type" : "integer"
          },
          "year" : {
            "type" : "integer"
          }
        }
      }
    },
    "parameters" : {
      "idParam" : {
        "name" : "id",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "description" : "Id of policy to return"
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "pru_api_auth" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "http://api.prudential.com/oauth/dialog",
            "tokenUrl" : "http://api.prudential.com/oauth/token",
            "scopes" : {
              "write:customers" : "modify customers",
              "read:customers" : "read customers",
              "search:customers" : "search customers",
              "write:products" : "modify products",
              "read:products" : "read products",
              "write:underwritings" : "modify underwritings",
              "read:underwritings" : "read underwritings",
              "write:agents" : "modify agents",
              "read:agents" : "read agents",
              "write:claims" : "modify claims",
              "read:claims" : "read claims",
              "write:policy" : "modify policy",
              "read:policy" : "read policy",
              "write:proposal" : "modify proposal",
              "read:proposal" : "read proposal",
              "write:quote" : "modify quote",
              "read:quote" : "read quote",
              "write:documents" : "modify documents",
              "read:documents" : "read documents",
              "write:billing" : "modify billing",
              "read:billing" : "read billing",
              "write:payment" : "modify payment",
              "read:payment" : "read payment",
              "search:doctors" : "search doctors",
              "write:doctors" : "write doctors",
              "read:doctors" : "read doctors",
              "write:users" : "write users",
              "read:users" : "read users",
              "write:entity" : "write entity",
              "read:entity" : "read entity",
              "read:message" : "read message",
              "write:message" : "write message",
              "read:fund" : "read fund",
              "write:fund" : "write fund",
              "read:campaign" : "read campaign",
              "write:campaign" : "write campaign",
              "search:hospitals" : "search hospitals",
              "read:hospitals" : "read hospitals",
              "write:hospitals" : "write hospitals",
              "search:geolocations" : "search geolocations",
              "read:geolocations" : "read geolocations",
              "write:geolocations" : "write geolocations",
              "search:groups" : "search groups",
              "read:groups" : "read groups",
              "write:groups" : "write groups"
            }
          }
        }
      },
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      },
      "pmn_api_auth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  },
  "security" : [ {
    "pru_api_auth" : [ ]
  }, {
    "apiKey" : [ ]
  }, {
    "pmn_api_auth" : [ ]
  } ],
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  }
}